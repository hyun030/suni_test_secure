# -*- coding: utf-8 -*-
"""
SK에너지 보고서 생성기 - 기본부터 다시 시작
PDF 오류 완전 해결을 위한 단계적 접근
"""

import io
import os
import pandas as pd
from datetime import datetime
import streamlit as st

# ReportLab만 기본 기능으로
try:
    from reportlab.pdfgen import canvas
    from reportlab.lib.pagesizes import A4
    REPORTLAB_OK = True
    print("✅ ReportLab 기본 로드")
except ImportError:
    REPORTLAB_OK = False
    print("❌ ReportLab 없음")


def create_basic_canvas_pdf():
    """가장 기본적인 Canvas PDF 생성"""
    if not REPORTLAB_OK:
        return b"ReportLab not available"
    
    try:
        print("📄 기본 Canvas PDF 생성...")
        
        buffer = io.BytesIO()
        c = canvas.Canvas(buffer, pagesize=A4)
        width, height = A4
        
        # 제목
        c.setFont("Helvetica-Bold", 16)
        c.drawString(50, height-50, "SK Energy Analysis Report")
        
        # 날짜
        c.setFont("Helvetica", 12)
        c.drawString(50, height-80, f"Date: {datetime.now().strftime('%Y-%m-%d %H:%M')}")
        
        # 구분선
        c.line(50, height-100, width-50, height-100)
        
        # 내용
        y = height-130
        c.setFont("Helvetica-Bold", 14)
        c.drawString(50, y, "1. Financial Analysis")
        
        y -= 30
        c.setFont("Helvetica", 10)
        lines = [
            "1-1. Financial Indicators",
            "     - Revenue: Data from financial_data",
            "     - Operating Margin: Data from financial_data", 
            "     - ROE: Data from financial_data",
            "",
            "1-2. Visual Analysis",
            "     - Quarterly trend chart",
            "     - Bar chart comparison",
            "",
            "1-3. Financial AI Insights",
            "     - AI analysis results"
        ]
        
        for line in lines:
            c.drawString(70, y, line)
            y -= 15
        
        y -= 20
        c.setFont("Helvetica-Bold", 14)
        c.drawString(50, y, "2. News Analysis")
        
        y -= 30
        c.setFont("Helvetica", 10)
        news_lines = [
            "2-1. News Status",
            "     - Recent news data",
            "",
            "2-2. News AI Insights", 
            "     - Market trend analysis"
        ]
        
        for line in news_lines:
            c.drawString(70, y, line)
            y -= 15
        
        y -= 20
        c.setFont("Helvetica-Bold", 14)
        c.drawString(50, y, "3. Integrated Insights")
        
        y -= 30
        c.setFont("Helvetica", 10)
        c.drawString(70, y, "Comprehensive analysis combining financial and news data")
        
        y -= 30
        c.setFont("Helvetica-Bold", 14)
        c.drawString(50, y, "4. Strategic Recommendations")
        
        y -= 30
        c.setFont("Helvetica", 10)
        rec_lines = [
            "4-1. Short-term strategy",
            "4-2. Medium-term strategy", 
            "4-3. Long-term strategy"
        ]
        
        for line in rec_lines:
            c.drawString(70, y, line)
            y -= 15
        
        # 푸터
        c.setFont("Helvetica", 8)
        c.drawString(50, 50, "Generated by AI Analysis System")
        
        c.save()
        
        pdf_data = buffer.getvalue()
        buffer.close()
        
        print(f"✅ 기본 PDF 완료: {len(pdf_data)} bytes")
        
        # 바이트 검증
        if len(pdf_data) < 100:
            print("❌ PDF 너무 작음")
            return None
            
        # PDF 시작 확인
        if not pdf_data.startswith(b'%PDF'):
            print("❌ PDF 형식 오류")
            return None
            
        return pdf_data
        
    except Exception as e:
        print(f"❌ 기본 PDF 실패: {e}")
        return None


def create_enhanced_pdf_report(
    financial_data=None,
    news_data=None,
    insights=None,
    show_footer=True,
    report_target="SK이노베이션 경영진",
    report_author="AI 분석 시스템",
    **kwargs
):
    """메인 함수 - 일단 기본 PDF만"""
    
    print("📄 PDF 생성 요청 받음...")
    print(f"financial_data: {type(financial_data)}")
    print(f"news_data: {type(news_data)}")
    print(f"insights: {type(insights)}")
    
    # 일단 가장 기본적인 PDF부터
    basic_pdf = create_basic_canvas_pdf()
    
    if basic_pdf:
        print("✅ 기본 PDF 성공")
        return basic_pdf
    else:
        print("❌ 기본 PDF 실패")
        
        # 수동 PDF 바이트 생성
        try:
            print("📄 수동 PDF 바이트 생성...")
            
            pdf_content = b"""%PDF-1.4
1 0 obj
<< /Type /Catalog /Pages 2 0 R >>
endobj
2 0 obj  
<< /Type /Pages /Kids [3 0 R] /Count 1 >>
endobj
3 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 4 0 R /Resources << /Font << /F1 5 0 R >> >> >>
endobj
4 0 obj
<< /Length 200 >>
stream
BT
/F1 12 Tf
50 750 Td
(SK Energy Report) Tj
0 -20 Td
(Generated: """ + datetime.now().strftime('%Y-%m-%d').encode('ascii') + b""") Tj
0 -40 Td
(1. Financial Analysis) Tj
0 -20 Td
(2. News Analysis) Tj  
0 -20 Td
(3. Integrated Insights) Tj
0 -20 Td
(4. Strategic Recommendations) Tj
ET
endstream
endobj
5 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Helvetica >>
endobj
xref
0 6
0000000000 65535 f
0000000010 00000 n
0000000053 00000 n
0000000110 00000 n
0000000246 00000 n
0000000498 00000 n
trailer
<< /Size 6 /Root 1 0 R >>
startxref
565
%%EOF"""
            
            print(f"✅ 수동 PDF 생성: {len(pdf_content)} bytes")
            return pdf_content
            
        except Exception as e:
            print(f"❌ 수동 PDF 실패: {e}")
            return "PDF generation completely failed".encode('utf-8')


def create_excel_report(
    financial_data=None,
    news_data=None,
    insights=None,
    **kwargs
):
    """Excel 보고서 생성"""
    try:
        buffer = io.BytesIO()
        
        # 기본 데이터
        data = {
            'SK에너지': [15.2, 5.6, 12.3],
            'S-Oil': [14.8, 5.3, 11.8]
        }
        
        df = pd.DataFrame(data, index=['매출액(조원)', '영업이익률(%)', 'ROE(%)'])
        
        with pd.ExcelWriter(buffer, engine='openpyxl') as writer:
            df.to_excel(writer, sheet_name='재무분석')
        
        buffer.seek(0)
        return buffer.getvalue()
        
    except Exception as e:
        print(f"Excel 실패: {e}")
        return None


# 메인 테스트
if __name__ == "__main__":
    print("🧪 기본 PDF 테스트...")
    
    # 1. 기본 테스트
    basic_test = create_basic_canvas_pdf()
    if basic_test:
        with open("basic_test.pdf", "wb") as f:
            f.write(basic_test)
        print("✅ basic_test.pdf 생성됨")
    
    # 2. 메인 함수 테스트
    main_test = create_enhanced_pdf_report()
    if main_test:
        with open("main_test.pdf", "wb") as f:
            f.write(main_test)
        print("✅ main_test.pdf 생성됨")
    
    print("테스트 완료 - 파일들을 직접 열어보세요!")
